@tailwind base;
@tailwind components;
@tailwind utilities;
@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');
:root {
    --foreground-rgb: 0, 0, 0;
    --background-start-rgb: 214, 219, 220;
    --background-end-rgb: 255, 255, 255;
}

.poppins-regular {
    font-family: 'Poppins', sans-serif;
    font-weight: 400;
    font-style: normal;
}

.poppins-medium {
    font-family: 'Poppins', sans-serif;
    font-weight: 500;
    font-style: normal;
}

.poppins-bold {
    font-family: 'Poppins', sans-serif;
    font-weight: 700;
    font-style: normal;
}

@media (prefers-color-scheme: dark) {
    :root {
        --foreground-rgb: 255, 255, 255;
        --background-start-rgb: 0, 0, 0;
        --background-end-rgb: 0, 0, 0;
    }
}

body {
    color: rgb(var(--foreground-rgb));
    background: linear-gradient(to bottom, transparent, rgb(var(--background-end-rgb)))
        rgb(var(--background-start-rgb));
}

/* Spinner styles */
.spinner {
    background-image: linear-gradient(rgb(186, 66, 255) 35%, rgb(0, 225, 255));
    width: 100px;
    height: 100px;
    animation: spinning82341 1.7s linear infinite;
    text-align: center;
    border-radius: 50px;
    filter: blur(1px);
    box-shadow: 0px -5px 20px 0px rgb(186, 66, 255), 0px 5px 20px 0px rgb(0, 225, 255);
}

.spinner1 {
    background-color: rgba(
        247,
        247,
        247,
        0.6
    ); /* Adjust the last value for desired transparency */
    width: 100px;
    height: 100px;
    border-radius: 50px;
    filter: blur(10px);
}

@keyframes spinning82341 {
    to {
        transform: rotate(360deg);
    }
}

/* spinner for audio page */
/* Spinner styles */
.spinner-audio {
    display: flex;
    justify-content: center;
    align-items: center;
    background-image: linear-gradient(rgb(186, 66, 255) 35%, rgb(0, 225, 255));
    width: 250px; /* Default size */
    height: 250px; /* Default size */
    animation: spinning82341 1.7s linear infinite;
    text-align: center;
    border-radius: 50%;
    filter: blur(1px);
    box-shadow: 0px -5px 20px 0px rgb(186, 66, 255), 0px 5px 20px 0px rgb(0, 225, 255);
}

.spinner1-audio {
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: rgba(247, 247, 247, 0.1);
    width: 250px; /* Default size */
    height: 250px; /* Default size */
    border-radius: 50%;
    filter: blur(10px);
}

/* Media query for medium (md) screens and above */
@media (min-width: 768px) {
    .spinner-audio {
        width: 200px; /* Smaller size for larger screens */
        height: 200px; /* Smaller size for larger screens */
    }

    .spinner1-audio {
        width: 200px; /* Smaller size for larger screens */
        height: 200px; /* Smaller size for larger screens */
    }
}

/* .spinner-container {
    position: relative;
    width: 100px;
    height: 100px;
} */

.mic-image {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 60px;
    height: 80px;
    z-index: 10;
    transform: translate(-50%, -50%);
}

.eclipse-animation {
    display: flex;
    gap: 10px;
    opacity: 0;
    transition: opacity 0.3s ease;
}

.eclipse-animation.active {
    opacity: 1;
    animation: moveEclipses 2.4s infinite;
}

.eclipse {
    width: 50px;
    height: 50px;
}

@keyframes moveEclipses {
    0% {
        transform: translateX(0);
    }
    25% {
        transform: translateX(15px);
    }
    50% {
        transform: translateX(-15px);
    }
    75% {
        transform: translateX(15px);
    }
    100% {
        transform: translateX(0);
    }
}

/*  For Audio Stream */
/* Default styles - applies to all sizes, equivalent to 'sm' in Tailwind */
.content-container {
    min-height: 200px;
}

/* Medium screens (md) and above */
@media (min-width: 768px) {
    .content-container {
        min-height: 600px;
    }
}
/* Button styles */
.button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 5px 20px;
    border: 0;
    position: relative;
    overflow: hidden;
    border-radius: 10rem;
    transition: all 0.2.4s;
    font-weight: bold;
    cursor: pointer;
    color: rgb(255, 255, 255); /* Change text color for better visibility */
    background: rgb(37, 37, 37); /* Default background color */
    z-index: 0;
    box-shadow: 0 0px 7px -5px rgba(0, 0, 0, 0.5);
}

.button:hover {
    background: rgb(193, 228, 248);
    color: rgb(33, 0, 85);
}

.button:active {
    transform: scale(0.97);
}

.hoverEffect {
    position: absolute;
    bottom: 0;
    top: 0;
    left: 0;
    right: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1;
}

.hoverEffect div {
    background: rgb(222, 0, 75);
    background: linear-gradient(
        90deg,
        rgba(222, 0, 75, 1) 0%,
        rgba(191, 70, 255, 1) 49%,
        rgba(0, 212, 255, 1) 100%
    );
    border-radius: 40rem;
    width: 10rem;
    height: 10rem;
    transition: 0.4s;
    filter: blur(20px);
    animation: effect infinite 3s linear;
    opacity: 0.5;
}

.button:hover .hoverEffect div {
    width: 8rem;
    height: 8rem;
}

.bubbles {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    overflow: hidden;
    pointer-events: none; /* Allows clicks to go through the bubbles */
}

.bubbles::before,
.bubbles::after {
    content: '';
    position: absolute;
    background: hsla(259, 100%, 67%, 0.477);
    border-radius: 50%;
    opacity: 0.7;
    filter: blur(50px); /* Creates the glowing effect */
}

.bubbles::before {
    width: 100px; /* Size of the bubble */
    height: 100px; /* Size of the bubble */
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    animation: bubble-animation 12s infinite; /* Adjust duration as needed */
}

.bubbles::after {
    width: 150px; /* Size of the bubble */
    height: 150px; /* Size of the bubble */
    left: 20%;
    top: 20%;
    animation: bubble-animation 12.4s infinite; /* Different duration for variation */
}

@keyframes bubble-animation {
    0% {
        transform: translate(0, 0) rotate(0deg); /* Start position */
        opacity: 0.7;
    }
    25% {
        transform: translate(100px, -50px) rotate(90deg); /* Move right-up */
        opacity: 0.7;
    }
    50% {
        transform: translate(-100px, -100px) rotate(180deg); /* Move left-up */
        opacity: 0.7;
    }
    75% {
        transform: translate(50px, 100px) rotate(270deg); /* Move right-down */
        opacity: 0.7;
    }
    100% {
        transform: translate(0, 0) rotate(470deg); /* Return to start */
        opacity: 0.7;
    }
}

@keyframes effect {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}

/* for button on the audio pages */
.enabledButton {
    background-color: purple;
}
/* 
.enabledButton:hover {
} */

.disabledButton {
    background-color: #333336;
}

/* For word sliding */
.wrapper {
    min-height: 3rem;
    min-width: 20rem;
    font-size: 2rem;
    position: relative;
    overflow: hidden;
    mask-image: linear-gradient(
        to right,
        rgba(0, 0, 0, 0),
        rgba(0, 0, 0, 1) 30%,
        rgba(0, 0, 0, 1) 70%,
        rgba(0, 0, 0, 0)
    );
    font-family: monospace;
}

.letter {
    width: 1ch;
    position: absolute;
    top: 50%;
    transform: translate(0px, -50%);
    left: 100%;
    animation: scroll 2.7s linear infinite;
}

@keyframes scroll {
    to {
        left: -10ch;
    }
}

/* Adjusted animation delays for each letter based on 33 letters */
.letter1 {
    animation-delay: calc(2.4s / 33 * (33 - 1) * -1);
}
.letter2 {
    animation-delay: calc(2.4s / 33 * (33 - 2) * -1);
}
.letter3 {
    animation-delay: calc(2.4s / 33 * (33 - 3) * -1);
}
.letter4 {
    animation-delay: calc(2.4s / 33 * (33 - 4) * -1);
}
.letter5 {
    animation-delay: calc(2.4s / 33 * (33 - 5) * -1);
}
.letter6 {
    animation-delay: calc(2.4s / 33 * (33 - 6) * -1);
}
.letter7 {
    animation-delay: calc(2.4s / 33 * (33 - 7) * -1);
}
.letter8 {
    animation-delay: calc(2.4s / 33 * (33 - 8) * -1);
}
.letter9 {
    animation-delay: calc(2.4s / 33 * (33 - 9) * -1);
}
.letter10 {
    animation-delay: calc(2.4s / 33 * (33 - 10) * -1);
}
.letter11 {
    animation-delay: calc(2.4s / 33 * (33 - 11) * -1);
}
.letter12 {
    animation-delay: calc(2.4s / 33 * (33 - 12) * -1);
}
.letter13 {
    animation-delay: calc(2.4s / 33 * (33 - 13) * -1);
}
.letter14 {
    animation-delay: calc(2.4s / 33 * (33 - 14) * -1);
}
.letter15 {
    animation-delay: calc(2.4s / 33 * (33 - 15) * -1);
}
.letter16 {
    animation-delay: calc(2.4s / 33 * (33 - 16) * -1);
}
.letter17 {
    animation-delay: calc(2.4s / 33 * (33 - 17) * -1);
}
.letter18 {
    animation-delay: calc(2.4s / 33 * (33 - 18) * -1);
}
.letter19 {
    animation-delay: calc(2.4s / 33 * (33 - 19) * -1);
}
.letter20 {
    animation-delay: calc(2.4s / 33 * (33 - 20) * -1);
}
.letter21 {
    animation-delay: calc(2.4s / 33 * (33 - 21) * -1);
}
.letter22 {
    animation-delay: calc(2.4s / 33 * (33 - 22) * -1);
}
.letter23 {
    animation-delay: calc(2.4s / 33 * (33 - 23) * -1);
}
.letter24 {
    animation-delay: calc(2.4s / 33 * (33 - 24) * -1);
}
.letter25 {
    animation-delay: calc(2.4s / 33 * (33 - 25) * -1);
}
.letter26 {
    animation-delay: calc(2.4s / 33 * (33 - 26) * -1);
}
.letter27 {
    animation-delay: calc(2.4s / 33 * (33 - 27) * -1);
}
.letter28 {
    animation-delay: calc(2.4s / 33 * (33 - 28) * -1);
}
.letter29 {
    animation-delay: calc(2.4s / 33 * (33 - 29) * -1);
}
.letter30 {
    animation-delay: calc(2.4s / 33 * (33 - 30) * -1);
}
.letter31 {
    animation-delay: calc(2.4s / 33 * (33 - 31) * -1);
}
.letter32 {
    animation-delay: calc(2.4s / 33 * (33 - 32) * -1);
}
.letter33 {
    animation-delay: calc(2.4s / 33 * (33 - 33) * -1);
}
